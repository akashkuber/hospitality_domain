import {createStore} from 'redux';
import reducer from './Reducer.js';
import {applyMiddleware} from 'redux';
import thunk from 'redux-thunk';
var store = applyMiddleware(thunk)(createStore)(reducer);



import { createAction } from 'redux-actions';
import axios from 'axios';
import IssueConstants from '../Constants/IssueConstants.js';
export function Login(data) {
  return dispatch => {
    axios.get('http://localhost:4000/users')
      .then((res) => {
        let value = res.data
        var result = value.find(val => val.username===data.username && val.password===data.password)  
        if(result) {
            dispatch(LoginMe(true))
          }
          else {
            dispatch(LoginMe(false))
          }
        })
  }
} 
export function LoginMe(isAuthenticated) {
  return {
    type: 'LOGIN',
    isAuthenticated
  }
}

import { withRouter, Redirect } from 'react-router';

{this.props.authState ?  <Redirect to="/purchasedItems" /> : null}

const mapStateToProps = (state) => {
  return {
    authState: state.login.isAuthed
  }
};
const mapDispatchToProps = (dispatch) => {
  return {
    login: (data) => dispatch(LoginAction(data))
  }
};
export default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));



import { createStore, applyMiddleware } from 'redux';


import { connect } from 'react-redux';
import { Provider }  from 'react-redux';

import  thunk  from 'redux-thunk';

import React from 'react';
import ReactDOM from 'react-dom';
import App from './components/App.js';
var store = applyMiddleware(thunk)(createStore)(reducer);

ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));


import { Button, Form, Col, Row} from 'react-bootstrap';

<Form horizontal="true" onSubmit={this.handleSubmit}>
<Form.Group controlId="formHorizontalUsername">
    <Col sm={12}>
    <Form.Control size="lg" value={this.state.username} name="username"
        className="input-lg" onChange={this.handleUsernameChange} ref="username" type="text" placeholder="Enter Username" />
    </Col>
</Form.Group>

<Form.Group as={Row}>
    <Col sm={4}>
    <Button className="ml1" variant="success" size="md" type="submit">
        Sign in
    </Button>
    </Col>
    <Col sm={8}>
    <Button className="ml2" variant="link" size="sm" onClick={this.onFnf}>
        Terms and Conditions
    </Button>
    </Col>
</Form.Group>